[gd_scene load_steps=40 format=3 uid="uid://btm8fh8tutk2x"]

[ext_resource type="Theme" uid="uid://co40pijjc7hbw" path="res://style/roadRogue.tres" id="1_badde"]
[ext_resource type="Script" path="res://scene/player/menu/main/main2.gd" id="1_cc7gi"]
[ext_resource type="Texture2D" uid="uid://dg2670kuahgqm" path="res://scene/car/van/van_background1.png" id="1_edrys"]
[ext_resource type="FontFile" uid="uid://dis65h8wxc3f2" path="res://addons/gut/fonts/LobsterTwo-Italic.ttf" id="2_5o1ri"]
[ext_resource type="Texture2D" uid="uid://nnbrmbv4q73i" path="res://scene/car/van/char_van3.png" id="2_g16c3"]
[ext_resource type="StyleBox" uid="uid://bbt1ii3ktk0v6" path="res://style/skewedPanel.tres" id="2_qamlo"]
[ext_resource type="Shader" path="res://shader/rainbowfill.gdshader" id="3_w77gt"]
[ext_resource type="FontFile" uid="uid://hf5rdg67jcwc" path="res://addons/gut/fonts/AnonymousPro-Italic.ttf" id="4_b1dqc"]
[ext_resource type="PackedScene" uid="uid://bepxjqhida0n8" path="res://scene/player/ui/roadButton.tscn" id="4_f12ks"]
[ext_resource type="FontFile" uid="uid://c106tp6lo578e" path="res://style/font/Tektur/Tektur-Bold.ttf" id="5_00nh6"]
[ext_resource type="Material" uid="uid://d4nw1uchte7mv" path="res://scene/player/menu/main/3dText_Common.tres" id="8_vdjnf"]
[ext_resource type="Shader" path="res://shader/3dtext.gdshader" id="9_78e4l"]
[ext_resource type="Texture2D" uid="uid://dlgpwix6wtodc" path="res://shader/emtpywhitegradient.tres" id="10_8o5bn"]
[ext_resource type="Shader" uid="uid://c2jd3wjben4p2" path="res://shader/3d_Text_HighlightRight.tres" id="10_l1x4e"]
[ext_resource type="Texture2D" uid="uid://w03tvhxtmrv4" path="res://texture/icon/icons8-coin-48 (1).png" id="11_1oi8i"]
[ext_resource type="PackedScene" uid="uid://clx3q1jksnuoc" path="res://scene/player/menu/main/car_stats_container.tscn" id="11_wos04"]
[ext_resource type="PackedScene" uid="uid://cabn86xos6l3c" path="res://scene/player/menu/main/top_menu.tscn" id="13_bt8kb"]
[ext_resource type="Material" uid="uid://dkh0a5rlpp5og" path="res://shader/mat_star_yellow.tres" id="17_k4abt"]
[ext_resource type="Texture2D" uid="uid://djs2pk1xs4sql" path="res://texture/icon/star.png" id="17_pkha7"]
[ext_resource type="Material" uid="uid://ci2pd2s2m10gw" path="res://shader/Mat_Star_Grey.tres" id="20_o60b3"]
[ext_resource type="Texture2D" uid="uid://bw45oo13cs8mi" path="res://texture/icon/lock.png" id="21_ggaes"]
[ext_resource type="Texture2D" uid="uid://bpbb6ppbrka2v" path="res://texture/icon/infinity.png" id="21_nfue6"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_noll7"]
shader = ExtResource("3_w77gt")
shader_parameter/strength = 1.0
shader_parameter/speed = 0.15
shader_parameter/angle = 125.0

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2gwjm"]
shader = ExtResource("3_w77gt")
shader_parameter/strength = 1.0
shader_parameter/speed = 0.15
shader_parameter/angle = 125.0

[sub_resource type="Gradient" id="Gradient_hfest"]
colors = PackedColorArray(0, 0, 0, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_pwab5"]
gradient = SubResource("Gradient_hfest")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jhcqm"]
shader = ExtResource("10_l1x4e")
shader_parameter/angle = 6.8
shader_parameter/thickness = 6.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.4)
shader_parameter/slices = 64
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/front_tex = ExtResource("10_8o5bn")
shader_parameter/back_tex = ExtResource("10_8o5bn")
shader_parameter/side_tex = SubResource("GradientTexture1D_pwab5")
shader_parameter/show_bound = false

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0um08"]
resource_local_to_scene = true
shader = ExtResource("9_78e4l")
shader_parameter/angle = 0.6
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/show_bound = false

[sub_resource type="ShaderMaterial" id="ShaderMaterial_y86de"]
resource_local_to_scene = true
shader = ExtResource("9_78e4l")
shader_parameter/angle = 0.6
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/show_bound = false

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ldal2"]
resource_local_to_scene = true
shader = ExtResource("9_78e4l")
shader_parameter/angle = 0.6
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/show_bound = false

[sub_resource type="ShaderMaterial" id="ShaderMaterial_y0wsr"]
resource_local_to_scene = true
shader = ExtResource("9_78e4l")
shader_parameter/angle = 0.6
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/show_bound = false

[sub_resource type="Shader" id="Shader_aam8k"]
code = "shader_type canvas_item;

//from https://godotshaders.com/shader/cool-3d-text/

render_mode blend_premul_alpha;

uniform float angle = -0.2;
uniform float thickness : hint_range(0.0, 64.0) = 10.0;
uniform float scale = 1.0;
uniform vec2 shear = vec2(0.0, -0.4);
uniform int slices = 16;
uniform bool outline = true;
uniform float outline_width : hint_range(0.0, 5.0) = 2.0;

uniform sampler2D front_tex : hint_default_white, repeat_disable;
uniform sampler2D back_tex : hint_default_white, repeat_disable;
uniform sampler2D side_tex : hint_default_black, repeat_disable;
uniform sampler2D outline_tex : hint_default_black, repeat_disable;

group_uniforms debug;
uniform bool show_bound = false;

float box(vec2 p, vec2 d){
	p = abs(p) - d;
	return max(p.x, p.y);
}

varying vec2 vertex_base;
varying flat vec2 glyph_position;
varying vec2 padding;
varying vec4 my_modulate;
void vertex() {
	// Magic :)
	vertex_base = vec2(float(VERTEX_ID>>1), float(6>>VERTEX_ID&1));
	glyph_position = UV;

	// Extend bounds
	padding = (vertex_base*2.0-1.0) * abs(shear) * thickness * 0.5;
	padding += (vertex_base*2.0-1.0) * outline_width;
	VERTEX.xy += padding;
	padding *= TEXTURE_PIXEL_SIZE;

	// Give me access to MODULATE
	my_modulate = COLOR;
}

void transformRay(inout vec3 p, inout vec3 rd, float _angle, float _scale, vec2 _shear){
	// Apply scale
	p.xy /= _scale;

	// Apply shear
	p.xy += p.z * _shear;
	rd.xy += rd.z * _shear;

	_angle = clamp( _angle * sin(TIME *2.0 ) , -1000000 ,100000);
	
	// Apply rotation
	mat2 R = mat2(vec2(cos(_angle),sin(_angle)),vec2(-sin(_angle),cos(_angle)));
	p.xz *= R;
	rd.xz *= R;
}

// complex number math
vec2 cmul(vec2 a, vec2 b) { return vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x); }
float getOutline(sampler2D tex, vec2 p, vec2 offset_px, vec2 clip_center, vec2 clip_size){
	float opacity = 0.0;

	for(int i = 0; i < 8; i++){
		float samp = texture(tex, p + offset_px).a;
		samp *= float(box(p + offset_px - clip_center, clip_size) < 0.0); // Clipping

		opacity = max(opacity, samp);

		offset_px = cmul(vec2(1.0/sqrt(2.0)), offset_px);
	}

	return opacity;
}

void fragment(){
	vec2 glyph_size = (UV - glyph_position)/vertex_base;
	vec2 glyph_center = glyph_position + glyph_size/2.0;

	vec3 p = vec3(UV + padding, 0); // A point in the font atlas, with padded bounds
	vec3 rd = vec3(0, 0, -1); // Ray points back to front

	// Inversly transform the ray
	p.xy -= glyph_center;
	transformRay(p, rd, angle, scale, shear);
	p.xy += glyph_center;


	// Intersect xy plane
	rd /= abs(rd.z);
	p -= rd * rd.z * p.z;

	// Thickness is measured in pixels. Hopefully the texture is predictable
	rd *= thickness * TEXTURE_PIXEL_SIZE.x;

	// Find back slice
	p -= rd * 0.5;

	// Prepare for ray march
	rd /= float(slices - 1);

	COLOR = vec4(0,0,0,0);

	// Add back outline
	if(outline){
		float opacity = getOutline(TEXTURE, p.xy, sign(shear) * TEXTURE_PIXEL_SIZE * outline_width, glyph_center, glyph_size/2.0);
		vec4 col = vec4(texture(outline_tex, vertex_base).rgb * opacity, opacity);
		col *= my_modulate;
		COLOR = COLOR + col * (1.0 - COLOR.a); // premultiplied alpha under operator*/
	}

	for(int i = 0; i<slices; i++){
		vec4 samp = texture(TEXTURE, p.xy);
		samp.a *= float(box(p.xy - glyph_center, glyph_size/2.0) < 0.0); // Clipping

		if(i < slices-1) {
			samp.rgb = texture(side_tex, vertex_base).rgb;
		}
		else if(rd.z < 0.0) {
			samp.rgb = texture(front_tex, vertex_base).rgb;
		}
		else {
			samp.rgb = texture(back_tex, vertex_base).rgb;
		}

		samp *= my_modulate;
		samp.rgb *= samp.a; // premultiply alpha
		COLOR = samp + COLOR * (1.0 - samp.a); // premultiplied alpha over operator

		// March to the next slice
		p += rd;
	}

	// Unmarch it back. Kinda lazy
	p -= rd;

	// Add front outline
	if(outline){
		float opacity = getOutline(TEXTURE, p.xy, sign(shear) * TEXTURE_PIXEL_SIZE * outline_width, glyph_center, glyph_size/2.0);
		vec4 col = vec4(texture(outline_tex, vertex_base).rgb * opacity, opacity);
		col *= my_modulate;
		COLOR = COLOR + col * (1.0 - COLOR.a); // premultiplied alpha under operator*/
	}

	if(show_bound){
		COLOR.a = COLOR.a * 0.8 + 0.2;

		float b = box(vertex_base-0.5, vec2(0.5));
		COLOR.g += (1.0 - clamp(abs(b/fwidth(b) + 0.5), 0.0, 1.0));
	}
	
}"

[sub_resource type="Gradient" id="Gradient_q2h8p"]
offsets = PackedFloat32Array(0)
colors = PackedColorArray(0.439049, 0.439049, 0.439049, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_3pvng"]
gradient = SubResource("Gradient_q2h8p")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_g2cil"]
resource_local_to_scene = true
shader = SubResource("Shader_aam8k")
shader_parameter/angle = 0.6
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/front_tex = SubResource("GradientTexture1D_3pvng")
shader_parameter/show_bound = false

[sub_resource type="ShaderMaterial" id="ShaderMaterial_af64s"]
resource_local_to_scene = true
shader = ExtResource("9_78e4l")
shader_parameter/angle = 0.6
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/show_bound = false

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8m70y"]
resource_local_to_scene = true
shader = ExtResource("9_78e4l")
shader_parameter/angle = 0.6
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/show_bound = false

[sub_resource type="Shader" id="Shader_y08tj"]
resource_local_to_scene = true
code = "shader_type canvas_item;

//from https://godotshaders.com/shader/cool-3d-text/

render_mode blend_premul_alpha;

uniform float angle = -0.2;
uniform float thickness : hint_range(0.0, 64.0) = 10.0;
uniform float scale = 1.0;
uniform vec2 shear = vec2(0.0, -0.4);
uniform int slices = 16;
uniform bool outline = true;
uniform float outline_width : hint_range(0.0, 5.0) = 2.0;

uniform sampler2D front_tex : hint_default_white, repeat_disable;
uniform sampler2D back_tex : hint_default_white, repeat_disable;
uniform sampler2D side_tex : hint_default_black, repeat_disable;
uniform sampler2D outline_tex : hint_default_black, repeat_disable;

group_uniforms debug;
uniform bool show_bound = false;

float box(vec2 p, vec2 d){
	p = abs(p) - d;
	return max(p.x, p.y);
}

varying vec2 vertex_base;
varying flat vec2 glyph_position;
varying vec2 padding;
varying vec4 my_modulate;
void vertex() {
	// Magic :)
	vertex_base = vec2(float(VERTEX_ID>>1), float(6>>VERTEX_ID&1));
	glyph_position = UV;

	// Extend bounds
	padding = (vertex_base*2.0-1.0) * abs(shear) * thickness * 0.5;
	padding += (vertex_base*2.0-1.0) * outline_width;
	VERTEX.xy += padding;
	padding *= TEXTURE_PIXEL_SIZE;

	// Give me access to MODULATE
	my_modulate = COLOR;
}

void transformRay(inout vec3 p, inout vec3 rd, float _angle, float _scale, vec2 _shear){
	// Apply scale
	p.xy /= _scale;

	// Apply shear
	p.xy += p.z * _shear;
	rd.xy += rd.z * _shear;

	_angle = clamp( _angle * sin(TIME *2.0 ) , -1000000 ,100000);
	
	// Apply rotation
	mat2 R = mat2(vec2(cos(_angle),sin(_angle)),vec2(-sin(_angle),cos(_angle)));
	p.xz *= R;
	rd.xz *= R;
}

// complex number math
vec2 cmul(vec2 a, vec2 b) { return vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x); }
float getOutline(sampler2D tex, vec2 p, vec2 offset_px, vec2 clip_center, vec2 clip_size){
	float opacity = 0.0;

	for(int i = 0; i < 8; i++){
		float samp = texture(tex, p + offset_px).a;
		samp *= float(box(p + offset_px - clip_center, clip_size) < 0.0); // Clipping

		opacity = max(opacity, samp);

		offset_px = cmul(vec2(1.0/sqrt(2.0)), offset_px);
	}

	return opacity;
}

void fragment(){
	vec2 glyph_size = (UV - glyph_position)/vertex_base;
	vec2 glyph_center = glyph_position + glyph_size/2.0;

	vec3 p = vec3(UV + padding, 0); // A point in the font atlas, with padded bounds
	vec3 rd = vec3(0, 0, -1); // Ray points back to front

	// Inversly transform the ray
	p.xy -= glyph_center;
	transformRay(p, rd, angle, scale, shear);
	p.xy += glyph_center;


	// Intersect xy plane
	rd /= abs(rd.z);
	p -= rd * rd.z * p.z;

	// Thickness is measured in pixels. Hopefully the texture is predictable
	rd *= thickness * TEXTURE_PIXEL_SIZE.x;

	// Find back slice
	p -= rd * 0.5;

	// Prepare for ray march
	rd /= float(slices - 1);

	COLOR = vec4(0,0,0,0);

	// Add back outline
	if(outline){
		float opacity = getOutline(TEXTURE, p.xy, sign(shear) * TEXTURE_PIXEL_SIZE * outline_width, glyph_center, glyph_size/2.0);
		vec4 col = vec4(texture(outline_tex, vertex_base).rgb * opacity, opacity);
		col *= my_modulate;
		COLOR = COLOR + col * (1.0 - COLOR.a); // premultiplied alpha under operator*/
	}

	for(int i = 0; i<slices; i++){
		vec4 samp = texture(TEXTURE, p.xy);
		samp.a *= float(box(p.xy - glyph_center, glyph_size/2.0) < 0.0); // Clipping

		if(i < slices-1) {
			samp.rgb = texture(side_tex, vertex_base).rgb;
		}
		else if(rd.z < 0.0) {
			samp.rgb = texture(front_tex, vertex_base).rgb;
		}
		else {
			samp.rgb = texture(back_tex, vertex_base).rgb;
		}

		samp *= my_modulate;
		samp.rgb *= samp.a; // premultiply alpha
		COLOR = samp + COLOR * (1.0 - samp.a); // premultiplied alpha over operator

		// March to the next slice
		p += rd;
	}

	// Unmarch it back. Kinda lazy
	p -= rd;

	// Add front outline
	if(outline){
		float opacity = getOutline(TEXTURE, p.xy, sign(shear) * TEXTURE_PIXEL_SIZE * outline_width, glyph_center, glyph_size/2.0);
		vec4 col = vec4(texture(outline_tex, vertex_base).rgb * opacity, opacity);
		col *= my_modulate;
		COLOR = COLOR + col * (1.0 - COLOR.a); // premultiplied alpha under operator*/
	}

	if(show_bound){
		COLOR.a = COLOR.a * 0.8 + 0.2;

		float b = box(vertex_base-0.5, vec2(0.5));
		COLOR.g += (1.0 - clamp(abs(b/fwidth(b) + 0.5), 0.0, 1.0));
	}
	
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_iiscy"]
resource_local_to_scene = true
shader = SubResource("Shader_y08tj")
shader_parameter/angle = 0.6
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/front_tex = ExtResource("21_ggaes")
shader_parameter/show_bound = false

[node name="Main2" type="CanvasLayer"]
script = ExtResource("1_cc7gi")

[node name="backgroundTexture" type="TextureRect" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("1_edrys")
expand_mode = 1
stretch_mode = 6

[node name="backgroundTexture2" type="TextureRect" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("1_edrys")
expand_mode = 1
stretch_mode = 6

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -733.0
offset_top = -818.0
grow_horizontal = 0
grow_vertical = 0

[node name="charTexture" type="TextureRect" parent="Control"]
unique_name_in_owner = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("2_g16c3")
expand_mode = 1
stretch_mode = 6

[node name="charTexture2" type="TextureRect" parent="Control"]
unique_name_in_owner = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("2_g16c3")
expand_mode = 1
stretch_mode = 6

[node name="Panel" type="Panel" parent="."]
anchors_preset = 9
anchor_bottom = 1.0
offset_right = 673.0
grow_vertical = 2
theme = ExtResource("1_badde")
theme_override_styles/panel = ExtResource("2_qamlo")

[node name="VBoxContainer" type="VBoxContainer" parent="Panel"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -255.5
offset_top = -232.0
offset_right = 304.5
offset_bottom = -55.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.8, 0.8)
theme_override_constants/separation = -40

[node name="Label" type="Label" parent="Panel/VBoxContainer"]
visible = false
material = SubResource("ShaderMaterial_noll7")
layout_mode = 2
theme_override_constants/outline_size = 2
theme_override_fonts/font = ExtResource("2_5o1ri")
theme_override_font_sizes/font_size = 24
text = "Gregry Boyd's"

[node name="HBoxContainer" type="HBoxContainer" parent="Panel/VBoxContainer"]
custom_minimum_size = Vector2(0, 100)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 10

[node name="Label" type="Label" parent="Panel/VBoxContainer/HBoxContainer"]
visible = false
material = ExtResource("8_vdjnf")
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_color = Color(0.92549, 0.603922, 0.160784, 1)
theme_override_colors/font_outline_color = Color(0.658824, 0.12549, 0.101961, 1)
theme_override_constants/outline_size = 20
theme_override_fonts/font = ExtResource("4_b1dqc")
theme_override_font_sizes/font_size = 36
text = "RIDE"

[node name="Label2" type="Label" parent="Panel/VBoxContainer/HBoxContainer"]
visible = false
material = ExtResource("8_vdjnf")
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_color = Color(0.92549, 0.603922, 0.160784, 1)
theme_override_colors/font_outline_color = Color(0.658824, 0.12549, 0.101961, 1)
theme_override_constants/outline_size = 20
theme_override_fonts/font = ExtResource("4_b1dqc")
theme_override_font_sizes/font_size = 36
text = "'N'"
horizontal_alignment = 1

[node name="Label3" type="Label" parent="Panel/VBoxContainer/HBoxContainer"]
material = SubResource("ShaderMaterial_2gwjm")
layout_mode = 2
size_flags_horizontal = 3
theme_override_constants/outline_size = 10
theme_override_fonts/font = ExtResource("4_b1dqc")
theme_override_font_sizes/font_size = 34
text = "Gregry Boyd's"
horizontal_alignment = 2

[node name="Label3" type="Label" parent="Panel/VBoxContainer"]
visible = false
material = SubResource("ShaderMaterial_jhcqm")
layout_mode = 2
size_flags_vertical = 2
theme_override_colors/font_color = Color(0.92549, 0.603922, 0.160784, 1)
theme_override_colors/font_outline_color = Color(0.658824, 0.12549, 0.101961, 1)
theme_override_constants/outline_size = 20
theme_override_fonts/font = ExtResource("5_00nh6")
theme_override_font_sizes/font_size = 60
text = "GOONCRUSHER"

[node name="Label4" type="Label" parent="Panel/VBoxContainer"]
visible = false
material = SubResource("ShaderMaterial_2gwjm")
layout_mode = 2
theme_override_constants/outline_size = 10
theme_override_fonts/font = ExtResource("4_b1dqc")
theme_override_font_sizes/font_size = 60
text = "PRIZE"

[node name="VBoxContainer" type="HBoxContainer" parent="Panel/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 10

[node name="Label5" type="Label" parent="Panel/VBoxContainer/VBoxContainer"]
material = SubResource("ShaderMaterial_jhcqm")
layout_mode = 2
size_flags_vertical = 0
theme_override_colors/font_color = Color(0.92549, 0.603922, 0.160784, 1)
theme_override_colors/font_outline_color = Color(0.658824, 0.12549, 0.101961, 1)
theme_override_constants/outline_size = 25
theme_override_fonts/font = ExtResource("5_00nh6")
theme_override_font_sizes/font_size = 90
text = "GOON"

[node name="Label6" type="Label" parent="Panel/VBoxContainer/VBoxContainer"]
material = SubResource("ShaderMaterial_jhcqm")
layout_mode = 2
size_flags_vertical = 8
theme_override_colors/font_color = Color(0.92549, 0.603922, 0.160784, 1)
theme_override_colors/font_outline_color = Color(0.658824, 0.12549, 0.101961, 1)
theme_override_constants/outline_size = 17
theme_override_fonts/font = ExtResource("5_00nh6")
theme_override_font_sizes/font_size = 70
text = "CRUSHER"

[node name="topMenu" parent="Panel" instance=ExtResource("13_bt8kb")]
layout_mode = 0
offset_left = 24.0
offset_top = 24.0
offset_right = 592.0
offset_bottom = 82.0

[node name="mainMenuPanel" type="Panel" parent="."]
unique_name_in_owner = true
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(0, 300)
anchors_preset = -1
anchor_top = 0.5
anchor_right = 0.03
anchor_bottom = 1.0
offset_left = 241.0
offset_top = 81.0
offset_right = 503.0
offset_bottom = -69.0
grow_vertical = 2
theme = ExtResource("1_badde")

[node name="VBoxContainer" type="VBoxContainer" parent="mainMenuPanel"]
layout_mode = 1
anchors_preset = 14
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_top = -189.0
offset_bottom = 189.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/separation = 40

[node name="HBoxContainer2" type="HBoxContainer" parent="mainMenuPanel/VBoxContainer"]
custom_minimum_size = Vector2(0, 50)
layout_mode = 2
size_flags_vertical = 4

[node name="HBoxContainer" type="HBoxContainer" parent="mainMenuPanel/VBoxContainer/HBoxContainer2"]
custom_minimum_size = Vector2(0, 75)
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme = ExtResource("1_badde")
theme_override_constants/separation = 20

[node name="VSeparator2" type="VSeparator" parent="mainMenuPanel/VBoxContainer/HBoxContainer2/HBoxContainer"]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 2

[node name="begin" parent="mainMenuPanel/VBoxContainer/HBoxContainer2/HBoxContainer" groups=["levelMenu"] instance=ExtResource("4_f12ks")]
unique_name_in_owner = true
visible = false
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(250, 25)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 3
focus_neighbor_bottom = NodePath("../../../HBoxContainer3/backButton")
focus_next = NodePath("../../../HBoxContainer3/backButton")
theme_override_font_sizes/font_size = 45
text = "Begin"
alignment = 1

[node name="unlock" parent="mainMenuPanel/VBoxContainer/HBoxContainer2/HBoxContainer" groups=["characterMenu"] instance=ExtResource("4_f12ks")]
unique_name_in_owner = true
visible = false
material = SubResource("ShaderMaterial_0um08")
custom_minimum_size = Vector2(250, 25)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 3
focus_neighbor_bottom = NodePath("../../../HBoxContainer5/recordsButton")
focus_next = NodePath("../../../HBoxContainer5/recordsButton")
theme_override_font_sizes/font_size = 60
text = ""
icon = ExtResource("11_1oi8i")
alignment = 1

[node name="levelSelect" parent="mainMenuPanel/VBoxContainer/HBoxContainer2/HBoxContainer" groups=["characterMenu"] instance=ExtResource("4_f12ks")]
unique_name_in_owner = true
material = SubResource("ShaderMaterial_y86de")
custom_minimum_size = Vector2(250, 0)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 3
focus_neighbor_bottom = NodePath("../../../HBoxContainer5/recordsButton")
focus_next = NodePath("../../../HBoxContainer5/recordsButton")
theme_override_font_sizes/font_size = 60
text = "Select Driver"
alignment = 1

[node name="VSeparator" type="VSeparator" parent="mainMenuPanel/VBoxContainer/HBoxContainer2"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(25, 0)
layout_mode = 2

[node name="HBoxContainer3" type="HBoxContainer" parent="mainMenuPanel/VBoxContainer"]
custom_minimum_size = Vector2(0, 50)
layout_mode = 2
size_flags_vertical = 4

[node name="VSeparator3" type="VSeparator" parent="mainMenuPanel/VBoxContainer/HBoxContainer3"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(33, 0)
layout_mode = 2

[node name="howToPlayButton" parent="mainMenuPanel/VBoxContainer/HBoxContainer3" groups=["characterMenu"] instance=ExtResource("4_f12ks")]
unique_name_in_owner = true
material = SubResource("ShaderMaterial_ldal2")
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 40
text = "  How To Play"

[node name="backButton" parent="mainMenuPanel/VBoxContainer/HBoxContainer3" groups=["levelMenu"] instance=ExtResource("4_f12ks")]
unique_name_in_owner = true
visible = false
self_modulate = Color(1, 1, 1, 0)
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 40
text = "  Return"

[node name="VSeparator4" type="VSeparator" parent="mainMenuPanel/VBoxContainer/HBoxContainer3"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(66, 0)
layout_mode = 2

[node name="HBoxContainer5" type="HBoxContainer" parent="mainMenuPanel/VBoxContainer"]
custom_minimum_size = Vector2(0, 50)
layout_mode = 2
size_flags_vertical = 4

[node name="VSeparator3" type="VSeparator" parent="mainMenuPanel/VBoxContainer/HBoxContainer5"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(66, 0)
layout_mode = 2

[node name="recordsButton" parent="mainMenuPanel/VBoxContainer/HBoxContainer5" groups=["characterMenu"] instance=ExtResource("4_f12ks")]
unique_name_in_owner = true
material = SubResource("ShaderMaterial_y0wsr")
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
focus_neighbor_top = NodePath("../../HBoxContainer2/HBoxContainer/levelSelect")
focus_previous = NodePath("../../HBoxContainer2/HBoxContainer/levelSelect")
theme_override_font_sizes/font_size = 40
text = "  Records"

[node name="VSeparator4" type="VSeparator" parent="mainMenuPanel/VBoxContainer/HBoxContainer5"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(33, 0)
layout_mode = 2

[node name="HBoxContainer4" type="HBoxContainer" parent="mainMenuPanel/VBoxContainer"]
custom_minimum_size = Vector2(0, 50)
layout_mode = 2
size_flags_vertical = 4

[node name="VSeparator2" type="VSeparator" parent="mainMenuPanel/VBoxContainer/HBoxContainer4"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(99, 0)
layout_mode = 2

[node name="carStatsContainer" parent="." groups=["characterMenu"] instance=ExtResource("11_wos04")]
anchors_preset = -1
anchor_left = 0.5
anchor_right = 1.0
offset_left = -125.0
offset_top = 35.0
offset_right = -150.0
offset_bottom = 289.0
grow_horizontal = 2

[node name="VBoxContainer2" type="VBoxContainer" parent="."]
custom_minimum_size = Vector2(800, 0)
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -46.0
offset_top = -318.0
offset_right = 754.0
offset_bottom = -45.0
grow_horizontal = 2
grow_vertical = 0
size_flags_vertical = 3
theme_override_constants/separation = -20

[node name="starContainer" type="HBoxContainer" parent="VBoxContainer2"]
unique_name_in_owner = true
custom_minimum_size = Vector2(500, 0)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="VSeparator" type="VSeparator" parent="VBoxContainer2/starContainer"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(240, 90)
layout_mode = 2

[node name="TextureRect" type="TextureRect" parent="VBoxContainer2/starContainer" groups=["COUNTDOWN", "gameModeStar", "levelMenu"]]
visible = false
material = ExtResource("17_k4abt")
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 4
texture = ExtResource("17_pkha7")
expand_mode = 1
stretch_mode = 5

[node name="TextureRect3" type="TextureRect" parent="VBoxContainer2/starContainer" groups=["SPRINT", "gameModeStar", "levelMenu"]]
visible = false
material = ExtResource("20_o60b3")
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 4
texture = ExtResource("17_pkha7")
expand_mode = 1
stretch_mode = 5

[node name="TextureRect2" type="TextureRect" parent="VBoxContainer2/starContainer" groups=["MARATHON", "gameModeStar", "levelMenu"]]
visible = false
material = ExtResource("20_o60b3")
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 4
texture = ExtResource("17_pkha7")
expand_mode = 1
stretch_mode = 5

[node name="TextureRect4" type="TextureRect" parent="VBoxContainer2/starContainer" groups=["DEFENSE", "gameModeStar", "levelMenu"]]
visible = false
material = ExtResource("20_o60b3")
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 4
texture = ExtResource("17_pkha7")
expand_mode = 1
stretch_mode = 5

[node name="TextureRect5" type="TextureRect" parent="VBoxContainer2/starContainer" groups=["GOONPOCALYPSE", "gameModeStar", "levelMenu"]]
visible = false
material = SubResource("ShaderMaterial_g2cil")
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 4
texture = ExtResource("21_nfue6")
expand_mode = 1
stretch_mode = 5

[node name="HBoxContainer" type="HBoxContainer" parent="VBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0
theme_override_constants/separation = 40

[node name="previous_car_button" parent="VBoxContainer2/HBoxContainer" instance=ExtResource("4_f12ks")]
material = SubResource("ShaderMaterial_af64s")
custom_minimum_size = Vector2(80, 0)
layout_mode = 2
size_flags_horizontal = 0
theme_override_font_sizes/font_size = 75
text = "<"

[node name="next_car_button" parent="VBoxContainer2/HBoxContainer" instance=ExtResource("4_f12ks")]
material = SubResource("ShaderMaterial_8m70y")
custom_minimum_size = Vector2(80, 0)
layout_mode = 2
size_flags_horizontal = 0
theme_override_font_sizes/font_size = 75
text = ">"

[node name="driverName" type="Label" parent="VBoxContainer2/HBoxContainer"]
unique_name_in_owner = true
material = ExtResource("8_vdjnf")
layout_mode = 2
size_flags_horizontal = 0
theme = ExtResource("1_badde")
theme_override_font_sizes/font_size = 65
text = "ANTHONY"

[node name="levelNameContainer" type="HBoxContainer" parent="VBoxContainer2"]
visible = false
layout_mode = 2
theme_override_constants/separation = 40

[node name="VSeparator" type="VSeparator" parent="VBoxContainer2/levelNameContainer"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(200, 70)
layout_mode = 2

[node name="levelName" type="Label" parent="VBoxContainer2/levelNameContainer"]
unique_name_in_owner = true
material = ExtResource("8_vdjnf")
layout_mode = 2
theme = ExtResource("1_badde")
theme_override_font_sizes/font_size = 40
text = "ANTHONY"

[node name="HBoxContainer2" type="HBoxContainer" parent="VBoxContainer2"]
layout_mode = 2
theme_override_constants/separation = 40

[node name="VSeparator" type="VSeparator" parent="VBoxContainer2/HBoxContainer2"]
self_modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(200, 70)
layout_mode = 2

[node name="driverName2" type="Label" parent="VBoxContainer2/HBoxContainer2" groups=["levelMenu"]]
unique_name_in_owner = true
visible = false
material = ExtResource("8_vdjnf")
layout_mode = 2
theme = ExtResource("1_badde")
theme_override_font_sizes/font_size = 40
text = "ANTHONY"

[node name="voicePlayer" type="AudioStreamPlayer" parent="."]
bus = &"Voice"

[node name="gameModeInfo" type="VBoxContainer" parent="."]
visible = false
anchors_preset = -1
anchor_left = 0.5
anchor_right = 1.0
offset_left = -141.0
offset_top = 39.0
offset_right = -307.0
offset_bottom = 591.0
grow_horizontal = 0

[node name="gameModeLabel" type="Label" parent="gameModeInfo"]
material = ExtResource("8_vdjnf")
layout_mode = 2
theme = ExtResource("1_badde")
theme_override_font_sizes/font_size = 65
text = "COUNTDOWN"

[node name="gameModeDescription" type="RichTextLabel" parent="gameModeInfo"]
material = ExtResource("8_vdjnf")
clip_contents = false
layout_mode = 2
theme = ExtResource("1_badde")
theme_override_font_sizes/normal_font_size = 40
text = "Survive the countdown while crushing increasing powerful waves of goon."
fit_content = true

[node name="emptySpace" type="RichTextLabel" parent="gameModeInfo"]
material = ExtResource("8_vdjnf")
clip_contents = false
layout_mode = 2
theme = ExtResource("1_badde")
theme_override_font_sizes/normal_font_size = 30
text = " "
fit_content = true

[node name="HBoxContainer" type="HBoxContainer" parent="gameModeInfo"]
layout_mode = 2

[node name="lock" type="TextureRect" parent="gameModeInfo/HBoxContainer"]
unique_name_in_owner = true
material = SubResource("ShaderMaterial_iiscy")
custom_minimum_size = Vector2(50, 50)
layout_mode = 2
size_flags_vertical = 0
texture = ExtResource("21_ggaes")
expand_mode = 1
stretch_mode = 5

[node name="unlockCondition" type="RichTextLabel" parent="gameModeInfo/HBoxContainer"]
unique_name_in_owner = true
material = ExtResource("8_vdjnf")
clip_contents = false
layout_mode = 2
size_flags_horizontal = 3
theme = ExtResource("1_badde")
theme_override_font_sizes/normal_font_size = 40
text = "Unlock by Completing Countdown"
fit_content = true

[connection signal="pressed" from="mainMenuPanel/VBoxContainer/HBoxContainer2/HBoxContainer/begin" to="." method="_on_begin_pressed"]
[connection signal="pressed" from="mainMenuPanel/VBoxContainer/HBoxContainer2/HBoxContainer/unlock" to="." method="_on_unlock_pressed"]
[connection signal="pressed" from="mainMenuPanel/VBoxContainer/HBoxContainer2/HBoxContainer/levelSelect" to="." method="_on_level_select_pressed"]
[connection signal="pressed" from="mainMenuPanel/VBoxContainer/HBoxContainer3/backButton" to="." method="_on_back_button_pressed"]
[connection signal="pressed" from="mainMenuPanel/VBoxContainer/HBoxContainer5/recordsButton" to="." method="_on_records_button_pressed"]
[connection signal="pressed" from="VBoxContainer2/HBoxContainer/previous_car_button" to="." method="_on_previous_car_button_pressed"]
[connection signal="pressed" from="VBoxContainer2/HBoxContainer/next_car_button" to="." method="_on_next_car_button_pressed"]
