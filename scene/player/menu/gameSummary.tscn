[gd_scene load_steps=13 format=3 uid="uid://cmq25gqd8rdxw"]

[ext_resource type="Theme" uid="uid://co40pijjc7hbw" path="res://style/roadRogue.tres" id="1_88ve0"]
[ext_resource type="Script" path="res://scene/player/menu/gameSummary.gd" id="1_exyns"]
[ext_resource type="PackedScene" uid="uid://bepxjqhida0n8" path="res://scene/player/ui/roadButton.tscn" id="2_llr28"]
[ext_resource type="Material" uid="uid://d4nw1uchte7mv" path="res://scene/player/menu/main/3dText_Common.tres" id="4_iax4v"]
[ext_resource type="AudioStream" uid="uid://b2uhv71f06te0" path="res://sound/fx/halloween-impact-05-93808.mp3" id="5_x2d5e"]
[ext_resource type="AudioStream" uid="uid://cs46g72v820b1" path="res://sound/fx/punch-2-123106.mp3" id="7_6todt"]

[sub_resource type="Shader" id="Shader_ffeh2"]
code = "shader_type canvas_item;

//from https://godotshaders.com/shader/cool-3d-text/

render_mode blend_premul_alpha;

uniform float angle = -0.2;
uniform float thickness : hint_range(0.0, 64.0) = 10.0;
uniform float scale = 1.0;
uniform vec2 shear = vec2(0.0, -0.4);
uniform int slices = 16;
uniform bool outline = true;
uniform float outline_width : hint_range(0.0, 5.0) = 2.0;

uniform sampler2D front_tex : hint_default_white, repeat_disable;
uniform sampler2D back_tex : hint_default_white, repeat_disable;
uniform sampler2D side_tex : hint_default_black, repeat_disable;
uniform sampler2D outline_tex : hint_default_black, repeat_disable;

group_uniforms debug;
uniform bool show_bound = false;

float box(vec2 p, vec2 d){
	p = abs(p) - d;
	return max(p.x, p.y);
}

varying vec2 vertex_base;
varying flat vec2 glyph_position;
varying vec2 padding;
varying vec4 my_modulate;
void vertex() {
	// Magic :)
	vertex_base = vec2(float(VERTEX_ID>>1), float(6>>VERTEX_ID&1));
	glyph_position = UV;

	// Extend bounds
	padding = (vertex_base*2.0-1.0) * abs(shear) * thickness * 0.5;
	padding += (vertex_base*2.0-1.0) * outline_width;
	VERTEX.xy += padding;
	padding *= TEXTURE_PIXEL_SIZE;

	// Give me access to MODULATE
	my_modulate = COLOR;
}

void transformRay(inout vec3 p, inout vec3 rd, float _angle, float _scale, vec2 _shear){
	// Apply scale
	p.xy /= _scale;

	// Apply shear
	p.xy += p.z * _shear;
	rd.xy += rd.z * _shear;

	_angle = clamp( _angle * sin(TIME *2.0 ) , -1000000 ,100000);
	
	// Apply rotation
	mat2 R = mat2(vec2(cos(_angle),sin(_angle)),vec2(-sin(_angle),cos(_angle)));
	p.xz *= R;
	rd.xz *= R;
}

// complex number math
vec2 cmul(vec2 a, vec2 b) { return vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x); }
float getOutline(sampler2D tex, vec2 p, vec2 offset_px, vec2 clip_center, vec2 clip_size){
	float opacity = 0.0;

	for(int i = 0; i < 8; i++){
		float samp = texture(tex, p + offset_px).a;
		samp *= float(box(p + offset_px - clip_center, clip_size) < 0.0); // Clipping

		opacity = max(opacity, samp);

		offset_px = cmul(vec2(1.0/sqrt(2.0)), offset_px);
	}

	return opacity;
}

void fragment(){
	vec2 glyph_size = (UV - glyph_position)/vertex_base;
	vec2 glyph_center = glyph_position + glyph_size/2.0;

	vec3 p = vec3(UV + padding, 0); // A point in the font atlas, with padded bounds
	vec3 rd = vec3(0, 0, -1); // Ray points back to front

	// Inversly transform the ray
	p.xy -= glyph_center;
	transformRay(p, rd, angle, scale, shear);
	p.xy += glyph_center;


	// Intersect xy plane
	rd /= abs(rd.z);
	p -= rd * rd.z * p.z;

	// Thickness is measured in pixels. Hopefully the texture is predictable
	rd *= thickness * TEXTURE_PIXEL_SIZE.x;

	// Find back slice
	p -= rd * 0.5;

	// Prepare for ray march
	rd /= float(slices - 1);

	COLOR = vec4(0,0,0,0);

	// Add back outline
	if(outline){
		float opacity = getOutline(TEXTURE, p.xy, sign(shear) * TEXTURE_PIXEL_SIZE * outline_width, glyph_center, glyph_size/2.0);
		vec4 col = vec4(texture(outline_tex, vertex_base).rgb * opacity, opacity);
		col *= my_modulate;
		COLOR = COLOR + col * (1.0 - COLOR.a); // premultiplied alpha under operator*/
	}

	for(int i = 0; i<slices; i++){
		vec4 samp = texture(TEXTURE, p.xy);
		samp.a *= float(box(p.xy - glyph_center, glyph_size/2.0) < 0.0); // Clipping

		if(i < slices-1) {
			samp.rgb = texture(side_tex, vertex_base).rgb;
		}
		else if(rd.z < 0.0) {
			samp.rgb = texture(front_tex, vertex_base).rgb;
		}
		else {
			samp.rgb = texture(back_tex, vertex_base).rgb;
		}

		samp *= my_modulate;
		samp.rgb *= samp.a; // premultiply alpha
		COLOR = samp + COLOR * (1.0 - samp.a); // premultiplied alpha over operator

		// March to the next slice
		p += rd;
	}

	// Unmarch it back. Kinda lazy
	p -= rd;

	// Add front outline
	if(outline){
		float opacity = getOutline(TEXTURE, p.xy, sign(shear) * TEXTURE_PIXEL_SIZE * outline_width, glyph_center, glyph_size/2.0);
		vec4 col = vec4(texture(outline_tex, vertex_base).rgb * opacity, opacity);
		col *= my_modulate;
		COLOR = COLOR + col * (1.0 - COLOR.a); // premultiplied alpha under operator*/
	}

	if(show_bound){
		COLOR.a = COLOR.a * 0.8 + 0.2;

		float b = box(vertex_base-0.5, vec2(0.5));
		COLOR.g += (1.0 - clamp(abs(b/fwidth(b) + 0.5), 0.0, 1.0));
	}
	
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_70ecg"]
resource_local_to_scene = true
shader = SubResource("Shader_ffeh2")
shader_parameter/angle = 3.0
shader_parameter/thickness = 5.0
shader_parameter/scale = 1.0
shader_parameter/shear = Vector2(0, -0.2)
shader_parameter/slices = 16
shader_parameter/outline = true
shader_parameter/outline_width = 2.0
shader_parameter/show_bound = false

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_vhec0"]

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_e2c58"]

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_ee2fh"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_5s1b4"]

[node name="GameSummary" type="CanvasLayer"]
script = ExtResource("1_exyns")

[node name="Panel" type="Panel" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Panel2" type="Panel" parent="Panel"]
custom_minimum_size = Vector2(500, 700)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -320.0
offset_top = -350.0
offset_right = 320.0
offset_bottom = 350.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("1_88ve0")

[node name="VBoxContainer" type="VBoxContainer" parent="Panel/Panel2"]
process_mode = 3
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 63.0
offset_top = 33.0
offset_right = -85.0
offset_bottom = -61.0
grow_horizontal = 2
grow_vertical = 2

[node name="wasSuccessful" type="Label" parent="Panel/Panel2/VBoxContainer"]
unique_name_in_owner = true
self_modulate = Color(1, 1, 1, 0)
material = ExtResource("4_iax4v")
layout_mode = 2
theme_override_font_sizes/font_size = 60
text = "LEVEL COMPLETE"
horizontal_alignment = 1

[node name="HSeparator3" type="HSeparator" parent="Panel/Panel2/VBoxContainer"]
modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(0, 75)
layout_mode = 2

[node name="HBoxContainer7" type="HBoxContainer" parent="Panel/Panel2/VBoxContainer"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer7"]
material = ExtResource("4_iax4v")
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Time"

[node name="time" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer7"]
material = ExtResource("4_iax4v")
layout_mode = 2
size_flags_horizontal = 10
theme_override_font_sizes/font_size = 24
text = "0
"

[node name="HBoxContainer3" type="HBoxContainer" parent="Panel/Panel2/VBoxContainer"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer3"]
material = ExtResource("4_iax4v")
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Top Speed"

[node name="topSpeed" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer3"]
material = ExtResource("4_iax4v")
layout_mode = 2
size_flags_horizontal = 10
theme_override_font_sizes/font_size = 24
text = "0
"

[node name="HBoxContainer6" type="HBoxContainer" parent="Panel/Panel2/VBoxContainer"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer6"]
material = ExtResource("4_iax4v")
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Goons Crushed"

[node name="goonsCrushed" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer6"]
material = ExtResource("4_iax4v")
layout_mode = 2
size_flags_horizontal = 10
theme_override_font_sizes/font_size = 24
text = "2"

[node name="HSeparator" type="HSeparator" parent="Panel/Panel2/VBoxContainer"]
modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(0, 15)
layout_mode = 2

[node name="HBoxContainer2" type="HBoxContainer" parent="Panel/Panel2/VBoxContainer"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer2"]
material = ExtResource("4_iax4v")
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Coins"

[node name="coinsCollected" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer2"]
material = ExtResource("4_iax4v")
layout_mode = 2
size_flags_horizontal = 10
theme_override_font_sizes/font_size = 24
text = "2"

[node name="HBoxContainer4" type="HBoxContainer" parent="Panel/Panel2/VBoxContainer"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer4"]
material = ExtResource("4_iax4v")
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Powerups"

[node name="powerups" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer4"]
material = ExtResource("4_iax4v")
layout_mode = 2
size_flags_horizontal = 10
theme_override_font_sizes/font_size = 24
text = "0"

[node name="HBoxContainer5" type="HBoxContainer" parent="Panel/Panel2/VBoxContainer"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer5"]
material = ExtResource("4_iax4v")
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Gems"

[node name="gems" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer5"]
material = ExtResource("4_iax4v")
layout_mode = 2
size_flags_horizontal = 10
theme_override_font_sizes/font_size = 24
text = "0"

[node name="HSeparator2" type="HSeparator" parent="Panel/Panel2/VBoxContainer"]
modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(0, 15)
layout_mode = 2

[node name="HBoxContainer8" type="HBoxContainer" parent="Panel/Panel2/VBoxContainer"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer8"]
material = ExtResource("4_iax4v")
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Slot Machines"

[node name="slotMachines" type="Label" parent="Panel/Panel2/VBoxContainer/HBoxContainer8"]
material = ExtResource("4_iax4v")
layout_mode = 2
size_flags_horizontal = 10
theme_override_font_sizes/font_size = 24
text = "0"

[node name="HSeparator4" type="HSeparator" parent="Panel/Panel2/VBoxContainer"]
modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(0, 75)
layout_mode = 2

[node name="continue" parent="Panel/Panel2/VBoxContainer" instance=ExtResource("2_llr28")]
visible = false
material = SubResource("ShaderMaterial_70ecg")
layout_mode = 2
size_flags_horizontal = 4
theme_override_font_sizes/font_size = 50
theme_override_styles/normal = SubResource("StyleBoxEmpty_vhec0")
theme_override_styles/hover = SubResource("StyleBoxEmpty_e2c58")
theme_override_styles/pressed = SubResource("StyleBoxEmpty_ee2fh")
theme_override_styles/focus = SubResource("StyleBoxFlat_5s1b4")
text = "Continue"

[node name="AudioStreamPlayer_highImpact" type="AudioStreamPlayer" parent="."]
stream = ExtResource("5_x2d5e")

[node name="AudioStreamPlayer2_lowImpact" type="AudioStreamPlayer" parent="."]
stream = ExtResource("7_6todt")

[connection signal="pressed" from="Panel/Panel2/VBoxContainer/continue" to="." method="_on_continue_pressed"]
